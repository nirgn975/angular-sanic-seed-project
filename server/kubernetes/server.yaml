apiVersion: v1
kind: Namespace
metadata:
  name: $NAMESPACE
  labels:
    name: $NAMESPACE
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: server
  namespace: $NAMESPACE
  labels:
    app: server
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: server
        version: $SHORT_SHA
    spec:
      containers:
        - name: server
          image: 'gcr.io/$PROJECT_ID/server:$SHORT_SHA'
          ports:
            - containerPort: 8000
          env:
            - name: SANIC_REQUEST_TIMEOUT
              value: "500"
            - name: SANIC_RESPONSE_TIMEOUT
              value: "500"
            - name: SANIC_KEEP_ALIVE_TIMEOUT
              value: "500"
            - name: DB_URI
              value: "postgres://nirgalon:@localhost:5432/assp"
            - name: DB_URI
              value: "postgres://nirgalon:@localhost:5432/assp"
            - name: DB_NAME
              value: "assp"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD
              value: "postgres"
            - name: DB_PORT
              value: "postgres"
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "8000"
            - name: LOG_LEVEL
              value: "info"
            - name: ENV
              value: "production"
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: server-service
  namespace: $NAMESPACE
  labels:
    name: server-service
spec:
  ports:
    - port: 80
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: server
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: server-ingress
  namespace: $NAMESPACE
  annotations:
    # Annotations for Nginx ingress controller:
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: $NAMESPACE.api.$CLUSTER_NAME.theraptr.io
    http:
      paths:
      - path: /server
        backend:
          serviceName: server-service
          servicePort: 80
